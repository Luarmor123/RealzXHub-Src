--Loader
local ScriptStarted = false
local Keybind = "J"
local Transparency = true
local NoClip = false

local Player = game:GetService("Players").LocalPlayer
local RealCharacter = Player.Character or Player.CharacterAdded:Wait()

local IsInvisible = false

RealCharacter.Archivable = true
local FakeCharacter = RealCharacter:Clone()
local Part
Part = Instance.new("Part", workspace)
Part.Anchored = true
Part.Size = Vector3.new(200, 1, 200)
Part.CFrame = CFrame.new(0, -500, 0)
Part.CanCollide = true
FakeCharacter.Parent = workspace
FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

for i, v in pairs(RealCharacter:GetChildren()) do
  if v:IsA("LocalScript") then
      local clone = v:Clone()
      clone.Disabled = true
      clone.Parent = FakeCharacter
  end
end
if Transparency then
  for i, v in pairs(FakeCharacter:GetDescendants()) do
      if v:IsA("BasePart") then
          v.Transparency = 0.9
      end
  end
end
local CanInvis = true
function RealCharacterDied()
  CanInvis = false
  RealCharacter:Destroy()
  RealCharacter = Player.Character
  CanInvis = true
  isinvisible = false
  FakeCharacter:Destroy()
  workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid

  RealCharacter.Archivable = true
  FakeCharacter = RealCharacter:Clone()
  Part:Destroy()
  Part = Instance.new("Part", workspace)
  Part.Anchored = true
  Part.Size = Vector3.new(200, 1, 200)
  Part.CFrame = CFrame.new(9999, 9999, 9999)
  FakeCharacter.Parent = workspace
  FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

  for i, v in pairs(RealCharacter:GetChildren()) do
      if v:IsA("LocalScript") then
          local clone = v:Clone()
          clone.Disabled = true
          clone.Parent = FakeCharacter
      end
  end
  if Transparency then
      for i, v in pairs(FakeCharacter:GetDescendants()) do
          if v:IsA("BasePart") then
              v.Transparency = 0.9
          end
      end
  end
 RealCharacter.Humanoid.Died:Connect(function()
 RealCharacter:Destroy()
 FakeCharacter:Destroy()
 end)
 Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
end
RealCharacter.Humanoid.Died:Connect(function()
 RealCharacter:Destroy()
 FakeCharacter:Destroy()
 end)
Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
local PseudoAnchor
game:GetService "RunService".RenderStepped:Connect(
  function()
      if PseudoAnchor ~= nil then
          PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
      end
       if NoClip then
      FakeCharacter.Humanoid:ChangeState(11)
       end
  end
)

PseudoAnchor = FakeCharacter.HumanoidRootPart
local function Invisible()
  if IsInvisible == false then
      local StoredCF = RealCharacter.HumanoidRootPart.CFrame
      RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = StoredCF
      RealCharacter.Humanoid:UnequipTools()
      Player.Character = FakeCharacter
      workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
      PseudoAnchor = RealCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA("LocalScript") then
              v.Disabled = false
          end
      end

      IsInvisible = true
  else
      local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
      FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
     
      RealCharacter.HumanoidRootPart.CFrame = StoredCF
     
      FakeCharacter.Humanoid:UnequipTools()
      Player.Character = RealCharacter
      workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
      PseudoAnchor = FakeCharacter.HumanoidRootPart
      for i, v in pairs(FakeCharacter:GetChildren()) do
          if v:IsA("LocalScript") then
              v.Disabled = true
          end
      end
      IsInvisible = false
  end
end

game:GetService("UserInputService").InputBegan:Connect(
  function(key, gamep)
      if gamep then
          return
      end
      if key.KeyCode.Name:lower() == Keybind:lower() and CanInvis and RealCharacter and FakeCharacter then
          if RealCharacter:FindFirstChild("HumanoidRootPart") and FakeCharacter:FindFirstChild("HumanoidRootPart") then
              Invisible()
          end
      end
  end
)
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Icon = Instance.new("ImageLabel")
local Line = Instance.new("Frame")
local Chose = Instance.new("TextLabel")
local Arabic = Instance.new("TextButton")
local English = Instance.new("TextButton")
local TG = Instance.new("TextButton")
-- ui
local UICornerFrame = Instance.new("UICorner")
local UICornerIcon = Instance.new("UICorner")
local UICornerArabic = Instance.new("UICorner")
local UICornerEnglish = Instance.new("UICorner")
local UICornerTG = Instance.new("UICorner")

--Properties
ScreenGui.Name = "ScreenGui"
ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, 0, 1.5, 0) -- Start position off-screen
Frame.Size = UDim2.new(0, 200, 0, 150)
Frame.ClipsDescendants = true
Frame.Active = true
Frame.Draggable = true

UICornerFrame.CornerRadius = UDim.new(0, 8)
UICornerFrame.Parent = Frame

Title.Parent = Frame
Title.AnchorPoint = Vector2.new(0.5, 0)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.5, 0, 0, 0)
Title.Size = UDim2.new(0, 320, 0, 40)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Invisible Gui [ Beta ]"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 20

UICornerIcon.CornerRadius = UDim.new(0, 5)
UICornerIcon.Parent = Icon

Line.Parent = Title
Line.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Line.Size = UDim2.new(1, 0, 0, 5)
Line.Position = UDim2.new(0, 0, 1.1, 0)



English.Parent = Frame
English.AnchorPoint = Vector2.new(0.5,0.5)
English.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
English.Position = UDim2.new(0.5, 0, 0, 95)
English.Size = UDim2.new(0, 100, 0, 35)
English.Font = Enum.Font.SourceSans
English.Text = "On / Off"
English.TextColor3 = Color3.fromRGB(255, 255, 255)
English.TextSize = 23

UICornerEnglish.CornerRadius = UDim.new(0, 8)
UICornerEnglish.Parent = English





--Animation
local tweenService = game:GetService("TweenService")
local curve = Enum.EasingStyle.Sine
local direction = Enum.EasingDirection.Out

local frameIn = {
  Position = UDim2.new(0.5, 0, 0.5, 0), -- Target position
}

local frameOut = {
  Position = UDim2.new(0.5, 0, 1.5, 0),
}

-- Function to animate the entrance
function animateIn()
  local frameTween = tweenService:Create(Frame, TweenInfo.new(2, curve, direction), frameIn)
  frameTween:Play()
end

function animateOut()
  local frameTween = tweenService:Create(Frame, TweenInfo.new(2, curve, direction), frameOut)
  frameTween:Play()
  frameTween.Completed:Connect(function()
    ScreenGui:Destroy()
  end)
end

-- Start the entrance animation
animateIn()


run = false

English.MouseButton1Click:Connect(function()
  run = not run
  if run then 
  English.TextColor3 = Color3.fromRGB(0, 255, 255)
  
  
local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, "J", false, game)
wait()
local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(false, "J", false, game)

end
end)





  
